name: PR Code Quality Checks

on:
  pull_request:
    branches:
      - master
      - main
      - develop
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:
  frontend-lint:
    name: Frontend Linting
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.changed_files, 'frontend/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: frontend
        run: npm ci

      - name: Run ESLint
        working-directory: frontend
        run: npm run lint
        continue-on-error: true

      - name: Check TypeScript
        working-directory: frontend
        run: npx tsc --noEmit
        continue-on-error: true

  backend-lint:
    name: Backend Linting
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.changed_files, 'backend/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        working-directory: backend
        run: |
          pip install --upgrade pip
          pip install ruff pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run Ruff Linter
        working-directory: backend
        run: ruff check . --output-format=github
        continue-on-error: true

      - name: Run Ruff Formatter Check
        working-directory: backend
        run: ruff format --check .
        continue-on-error: true

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

  label-pr:
    name: Auto Label PR
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Auto Label
        uses: actions/labeler@v5
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          configuration-path: .github/labeler.yml
          sync-labels: true

  summary:
    name: Checks Summary
    runs-on: ubuntu-latest
    needs: [frontend-lint, backend-lint, security-scan]
    if: always()

    steps:
      - name: Check results
        run: |
          echo "## PR Code Quality Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Frontend Lint: ${{ needs.frontend-lint.result }}" >> $GITHUB_STEP_SUMMARY
          echo "Backend Lint: ${{ needs.backend-lint.result }}" >> $GITHUB_STEP_SUMMARY
          echo "Security Scan: ${{ needs.security-scan.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "CodeRabbit will provide detailed AI-powered code review shortly!" >> $GITHUB_STEP_SUMMARY
